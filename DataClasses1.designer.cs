#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mazaya_3G_return
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mazaya")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccessories_Types_2(Accessories_Types_2 instance);
    partial void UpdateAccessories_Types_2(Accessories_Types_2 instance);
    partial void DeleteAccessories_Types_2(Accessories_Types_2 instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void Insertlogin_Tbl(login_Tbl instance);
    partial void Updatelogin_Tbl(login_Tbl instance);
    partial void Deletelogin_Tbl(login_Tbl instance);
    partial void InsertPayment_In(Payment_In instance);
    partial void UpdatePayment_In(Payment_In instance);
    partial void DeletePayment_In(Payment_In instance);
    partial void InsertProducing_company(Producing_company instance);
    partial void UpdateProducing_company(Producing_company instance);
    partial void DeleteProducing_company(Producing_company instance);
    partial void Insertpurchase_check_detail(purchase_check_detail instance);
    partial void Updatepurchase_check_detail(purchase_check_detail instance);
    partial void Deletepurchase_check_detail(purchase_check_detail instance);
    partial void InsertReturns_check(Returns_check instance);
    partial void UpdateReturns_check(Returns_check instance);
    partial void DeleteReturns_check(Returns_check instance);
    partial void InsertReturns_check_detail(Returns_check_detail instance);
    partial void UpdateReturns_check_detail(Returns_check_detail instance);
    partial void DeleteReturns_check_detail(Returns_check_detail instance);
    partial void InsertSale_check(Sale_check instance);
    partial void UpdateSale_check(Sale_check instance);
    partial void DeleteSale_check(Sale_check instance);
    partial void InsertScreen_Title(Screen_Title instance);
    partial void UpdateScreen_Title(Screen_Title instance);
    partial void DeleteScreen_Title(Screen_Title instance);
    partial void InsertType_item(Type_item instance);
    partial void UpdateType_item(Type_item instance);
    partial void DeleteType_item(Type_item instance);
    partial void InsertSale_check_detail(Sale_check_detail instance);
    partial void UpdateSale_check_detail(Sale_check_detail instance);
    partial void DeleteSale_check_detail(Sale_check_detail instance);
    partial void InsertPayment_Out(Payment_Out instance);
    partial void UpdatePayment_Out(Payment_Out instance);
    partial void DeletePayment_Out(Payment_Out instance);
    partial void InsertUsed_Item(Used_Item instance);
    partial void UpdateUsed_Item(Used_Item instance);
    partial void DeleteUsed_Item(Used_Item instance);
    partial void InsertUsed_Payment_In(Used_Payment_In instance);
    partial void UpdateUsed_Payment_In(Used_Payment_In instance);
    partial void DeleteUsed_Payment_In(Used_Payment_In instance);
    partial void InsertUsed_Purchase_Check_detail(Used_Purchase_Check_detail instance);
    partial void UpdateUsed_Purchase_Check_detail(Used_Purchase_Check_detail instance);
    partial void DeleteUsed_Purchase_Check_detail(Used_Purchase_Check_detail instance);
    partial void InsertUsed_Return_check(Used_Return_check instance);
    partial void UpdateUsed_Return_check(Used_Return_check instance);
    partial void DeleteUsed_Return_check(Used_Return_check instance);
    partial void InsertUsed_Return_Check_detail(Used_Return_Check_detail instance);
    partial void UpdateUsed_Return_Check_detail(Used_Return_Check_detail instance);
    partial void DeleteUsed_Return_Check_detail(Used_Return_Check_detail instance);
    partial void InsertUsed_Sale_Check(Used_Sale_Check instance);
    partial void UpdateUsed_Sale_Check(Used_Sale_Check instance);
    partial void DeleteUsed_Sale_Check(Used_Sale_Check instance);
    partial void InsertUsed_Sale_Check_detail(Used_Sale_Check_detail instance);
    partial void UpdateUsed_Sale_Check_detail(Used_Sale_Check_detail instance);
    partial void DeleteUsed_Sale_Check_detail(Used_Sale_Check_detail instance);
    partial void InsertPayment_Return_client(Payment_Return_client instance);
    partial void UpdatePayment_Return_client(Payment_Return_client instance);
    partial void DeletePayment_Return_client(Payment_Return_client instance);
    partial void InsertPayment_Return_Clients_Used(Payment_Return_Clients_Used instance);
    partial void UpdatePayment_Return_Clients_Used(Payment_Return_Clients_Used instance);
    partial void DeletePayment_Return_Clients_Used(Payment_Return_Clients_Used instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Mazaya_3G_return.Properties.Settings.Default.mazayaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Accessories_Types_2> Accessories_Types_2s
		{
			get
			{
				return this.GetTable<Accessories_Types_2>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<login_Tbl> login_Tbls
		{
			get
			{
				return this.GetTable<login_Tbl>();
			}
		}
		
		public System.Data.Linq.Table<Payment_In> Payment_Ins
		{
			get
			{
				return this.GetTable<Payment_In>();
			}
		}
		
		public System.Data.Linq.Table<Producing_company> Producing_companies
		{
			get
			{
				return this.GetTable<Producing_company>();
			}
		}
		
		public System.Data.Linq.Table<Purchase_check> Purchase_checks
		{
			get
			{
				return this.GetTable<Purchase_check>();
			}
		}
		
		public System.Data.Linq.Table<purchase_check_detail> purchase_check_details
		{
			get
			{
				return this.GetTable<purchase_check_detail>();
			}
		}
		
		public System.Data.Linq.Table<Returns_check> Returns_checks
		{
			get
			{
				return this.GetTable<Returns_check>();
			}
		}
		
		public System.Data.Linq.Table<Returns_check_detail> Returns_check_details
		{
			get
			{
				return this.GetTable<Returns_check_detail>();
			}
		}
		
		public System.Data.Linq.Table<Sale_check> Sale_checks
		{
			get
			{
				return this.GetTable<Sale_check>();
			}
		}
		
		public System.Data.Linq.Table<Screen_Title> Screen_Titles
		{
			get
			{
				return this.GetTable<Screen_Title>();
			}
		}
		
		public System.Data.Linq.Table<sysdiagram> sysdiagrams
		{
			get
			{
				return this.GetTable<sysdiagram>();
			}
		}
		
		public System.Data.Linq.Table<Type_item> Type_items
		{
			get
			{
				return this.GetTable<Type_item>();
			}
		}
		
		public System.Data.Linq.Table<Sale_check_detail> Sale_check_details
		{
			get
			{
				return this.GetTable<Sale_check_detail>();
			}
		}
		
		public System.Data.Linq.Table<Payment_Out> Payment_Outs
		{
			get
			{
				return this.GetTable<Payment_Out>();
			}
		}
		
		public System.Data.Linq.Table<Used_Item> Used_Items
		{
			get
			{
				return this.GetTable<Used_Item>();
			}
		}
		
		public System.Data.Linq.Table<Used_Payment_In> Used_Payment_Ins
		{
			get
			{
				return this.GetTable<Used_Payment_In>();
			}
		}
		
		public System.Data.Linq.Table<Used_Payment_Out> Used_Payment_Outs
		{
			get
			{
				return this.GetTable<Used_Payment_Out>();
			}
		}
		
		public System.Data.Linq.Table<Used_Purchase_check> Used_Purchase_checks
		{
			get
			{
				return this.GetTable<Used_Purchase_check>();
			}
		}
		
		public System.Data.Linq.Table<Used_Purchase_Check_detail> Used_Purchase_Check_details
		{
			get
			{
				return this.GetTable<Used_Purchase_Check_detail>();
			}
		}
		
		public System.Data.Linq.Table<Used_Return_check> Used_Return_checks
		{
			get
			{
				return this.GetTable<Used_Return_check>();
			}
		}
		
		public System.Data.Linq.Table<Used_Return_Check_detail> Used_Return_Check_details
		{
			get
			{
				return this.GetTable<Used_Return_Check_detail>();
			}
		}
		
		public System.Data.Linq.Table<Used_Sale_Check> Used_Sale_Checks
		{
			get
			{
				return this.GetTable<Used_Sale_Check>();
			}
		}
		
		public System.Data.Linq.Table<Used_Sale_Check_detail> Used_Sale_Check_details
		{
			get
			{
				return this.GetTable<Used_Sale_Check_detail>();
			}
		}
		
		public System.Data.Linq.Table<Payment_Return_client> Payment_Return_clients
		{
			get
			{
				return this.GetTable<Payment_Return_client>();
			}
		}
		
		public System.Data.Linq.Table<Payment_Return_Clients_Used> Payment_Return_Clients_Useds
		{
			get
			{
				return this.GetTable<Payment_Return_Clients_Used>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.back_mazaya")]
		public int back_mazaya()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_purch_check_id")]
		public ISingleResult<get_purch_check_idResult> get_purch_check_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<get_purch_check_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_sale_check_by_id")]
		public ISingleResult<get_sale_check_by_idResult> get_sale_check_by_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<get_sale_check_by_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_sale_check_by_id2")]
		public ISingleResult<get_sale_check_by_id2Result> get_sale_check_by_id2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<get_sale_check_by_id2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_Items")]
		public int ins_Items([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string item_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Recieve_Price", DbType="Float")] System.Nullable<double> recieve_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> sale_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Producing_company_id", DbType="Int")] System.Nullable<int> producing_company_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> screen_title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_name, type, count, recieve_Price, sale_Price, notes, producing_company_id, screen_title);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_payment")]
		public int ins_payment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(50)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_payment_in")]
		public int ins_payment_in([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(50)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_production_company")]
		public int ins_production_company([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_purchase_check_detail")]
		public int ins_purchase_check_detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> purchase_check_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_id, count, price, notes, purchase_check_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_returns_check_detail")]
		public int ins_returns_check_detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> return_check_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_id, count, price, notes, return_check_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_type")]
		public int ins_type([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_Purchase_check")]
		public int insert_Purchase_check([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> recieveDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string supplierName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string suppliercompany, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cashier_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Float")] System.Nullable<double> totalPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> dif, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> discount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> addition, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> remaining)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, recieveDate, supplierName, suppliercompany, cashier_id, totalPrice, note, dif, discount, addition, remaining);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_return_check")]
		public int insert_return_check([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> saleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string saleto, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> seller_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Float")] System.Nullable<double> totalPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sale_check_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> dif)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, saleDate, saleto, seller_id, totalPrice, sale_check_id, note, dif);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_sale_check")]
		public int insert_sale_check([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> saleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string saleto, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> seller_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Float")] System.Nullable<double> totalPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> dif, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> discount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> add, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> remain)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, saleDate, saleto, seller_id, totalPrice, note, dif, discount, add, remain);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.plus_item_count")]
		public int plus_item_count([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.purch_checks_date")]
		public ISingleResult<purch_checks_dateResult> purch_checks_date([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d);
			return ((ISingleResult<purch_checks_dateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.purch_checks_month")]
		public ISingleResult<purch_checks_monthResult> purch_checks_month([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> m, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> y)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), m, y);
			return ((ISingleResult<purch_checks_monthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.purch_details")]
		public ISingleResult<purch_detailsResult> purch_details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<purch_detailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.register")]
		public int register([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Uname", DbType="NVarChar(50)")] string uname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> state)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, uname, pass, state);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.report_checks_between_dates")]
		public ISingleResult<report_checks_between_datesResult> report_checks_between_dates([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> fdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> ldate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fdate, ldate);
			return ((ISingleResult<report_checks_between_datesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.return_checks_date")]
		public ISingleResult<return_checks_dateResult> return_checks_date([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d);
			return ((ISingleResult<return_checks_dateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.return_checks_month")]
		public ISingleResult<return_checks_monthResult> return_checks_month([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> m, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> y)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), m, y);
			return ((ISingleResult<return_checks_monthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.return_details")]
		public ISingleResult<return_detailsResult> return_details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<return_detailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sale_checks_date")]
		public ISingleResult<sale_checks_dateResult> sale_checks_date([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d);
			return ((ISingleResult<sale_checks_dateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sale_checks_month")]
		public ISingleResult<sale_checks_monthResult> sale_checks_month([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> m, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> y)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), m, y);
			return ((ISingleResult<sale_checks_monthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sale_details")]
		public ISingleResult<sale_detailsResult> sale_details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sale_detailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_purchase_report")]
		public ISingleResult<select_purchase_reportResult> select_purchase_report([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<select_purchase_reportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sub_item_count")]
		public int sub_item_count([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_diff")]
		public int update_diff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> i, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), i, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_item_saleprice")]
		public int update_item_saleprice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> sale_price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, sale_price);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateitemcouunt")]
		public int updateitemcouunt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, count);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateitemcouunt2")]
		public int updateitemcouunt2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, count, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateProfile")]
		public int updateProfile([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> state, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string fname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string hint)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username, password, state, fname, lname, tel, email, address, hint);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_Sale_check_detail")]
		public int ins_Sale_check_detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sale_check_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> unit_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> paid_price_item)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_id, count, price, notes, sale_check_id, unit_price, paid_price_item);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_return_sale_check_by_id")]
		public ISingleResult<get_return_sale_check_by_idResult> get_return_sale_check_by_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<get_return_sale_check_by_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_store_items")]
		public ISingleResult<get_store_itemsResult> get_store_items()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<get_store_itemsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_payment_out")]
		public int ins_payment_out([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(70)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_diff_purchase_out")]
		public int update_diff_purchase_out([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> i, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), i, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_Used_Purchase_check")]
		public int insert_Used_Purchase_check([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> recieveDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string supplierName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string suppliercompany, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cashier_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Float")] System.Nullable<double> totalPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> dif, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> discount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> addition, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> remaining)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, recieveDate, supplierName, suppliercompany, cashier_id, totalPrice, note, dif, discount, addition, remaining);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_Used_itemcouunt2")]
		public int update_Used_itemcouunt2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, count, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_Used_Items")]
		public int ins_Used_Items([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string item_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Recieve_Price", DbType="Float")] System.Nullable<double> recieve_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> sale_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Producing_company_id", DbType="Int")] System.Nullable<int> producing_company_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> screen_title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_name, type, count, recieve_Price, sale_Price, notes, producing_company_id, screen_title);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_ins_purchase_check_detail")]
		public int Used_ins_purchase_check_detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> purchase_check_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_id, count, price, notes, purchase_check_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_get_purch_check_id")]
		public ISingleResult<Used_get_purch_check_idResult> Used_get_purch_check_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Used_get_purch_check_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_ins_Sale_check_detail")]
		public int Used_ins_Sale_check_detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sale_check_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> unit_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> paid_price_item)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_id, count, price, notes, sale_check_id, unit_price, paid_price_item);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_sub_item_count")]
		public int Used_sub_item_count([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_insert_sale_check")]
		public int Used_insert_sale_check([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> saleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string saleto, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> seller_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Float")] System.Nullable<double> totalPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> dif, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> discount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> add, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> remain)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, saleDate, saleto, seller_id, totalPrice, note, dif, discount, add, remain);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_get_sale_check_by_id2")]
		public ISingleResult<Used_get_sale_check_by_id2Result> Used_get_sale_check_by_id2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Used_get_sale_check_by_id2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_update_item_saleprice")]
		public int Used_update_item_saleprice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> sale_price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, sale_price);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_insert_return_check")]
		public int Used_insert_return_check([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> saleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string saleto, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> seller_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalPrice", DbType="Float")] System.Nullable<double> totalPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sale_check_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> dif)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, saleDate, saleto, seller_id, totalPrice, sale_check_id, note, dif);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_ins_returns_check_detail")]
		public int Used_ins_returns_check_detail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string notes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> return_check_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_id, count, price, notes, return_check_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_plus_item_count")]
		public int Used_plus_item_count([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_get_return_sale_check_by_id")]
		public ISingleResult<Used_get_return_sale_check_by_idResult> Used_get_return_sale_check_by_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Used_get_return_sale_check_by_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USed_get_store_items")]
		public ISingleResult<USed_get_store_itemsResult> USed_get_store_items()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USed_get_store_itemsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_purch_checks_date")]
		public ISingleResult<Used_purch_checks_dateResult> Used_purch_checks_date([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d);
			return ((ISingleResult<Used_purch_checks_dateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_purch_details")]
		public ISingleResult<Used_purch_detailsResult> Used_purch_details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Used_purch_detailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_sale_checks_date")]
		public ISingleResult<Used_sale_checks_dateResult> Used_sale_checks_date([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d);
			return ((ISingleResult<Used_sale_checks_dateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_sale_details")]
		public ISingleResult<Used_sale_detailsResult> Used_sale_details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Used_sale_detailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_return_checks_date")]
		public ISingleResult<Used_return_checks_dateResult> Used_return_checks_date([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d);
			return ((ISingleResult<Used_return_checks_dateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_return_details")]
		public ISingleResult<Used_return_detailsResult> Used_return_details([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Used_return_detailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_ins_payment_in")]
		public int Used_ins_payment_in([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(50)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_update_diff")]
		public int Used_update_diff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> i, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), i, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_ins_payment_out")]
		public int Used_ins_payment_out([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(70)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Used_update_diff_purchase_out")]
		public int Used_update_diff_purchase_out([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> i, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), i, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.payment_Return_Client")]
		public int payment_Return_Client([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(50)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_diff_return_clients")]
		public int update_diff_return_clients([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> i, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), i, p);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.payment_Return_Client_Used")]
		public int payment_Return_Client_Used([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cah_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="N", DbType="NVarChar(50)")] string n)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, cah_id, d, p, n);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_diff_return_clients_Used")]
		public int update_diff_return_clients_Used([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> i, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> p)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), i, p);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accessories_Types_2")]
	public partial class Accessories_Types_2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Screen_Title_ID;
		
		private string _Accessories_types;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScreen_Title_IDChanging(int value);
    partial void OnScreen_Title_IDChanged();
    partial void OnAccessories_typesChanging(string value);
    partial void OnAccessories_typesChanged();
    #endregion
		
		public Accessories_Types_2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screen_Title_ID", DbType="Int NOT NULL")]
		public int Screen_Title_ID
		{
			get
			{
				return this._Screen_Title_ID;
			}
			set
			{
				if ((this._Screen_Title_ID != value))
				{
					this.OnScreen_Title_IDChanging(value);
					this.SendPropertyChanging();
					this._Screen_Title_ID = value;
					this.SendPropertyChanged("Screen_Title_ID");
					this.OnScreen_Title_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accessories_types", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Accessories_types
		{
			get
			{
				return this._Accessories_types;
			}
			set
			{
				if ((this._Accessories_types != value))
				{
					this.OnAccessories_typesChanging(value);
					this.SendPropertyChanging();
					this._Accessories_types = value;
					this.SendPropertyChanged("Accessories_types");
					this.OnAccessories_typesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Type;
		
		private int _count;
		
		private double _Recieve_Price;
		
		private double _Sale_Price;
		
		private string _Notes;
		
		private System.Nullable<int> _Producing_company_id;
		
		private System.Nullable<int> _Screen_Title_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnRecieve_PriceChanging(double value);
    partial void OnRecieve_PriceChanged();
    partial void OnSale_PriceChanging(double value);
    partial void OnSale_PriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnProducing_company_idChanging(System.Nullable<int> value);
    partial void OnProducing_company_idChanged();
    partial void OnScreen_Title_IDChanging(System.Nullable<int> value);
    partial void OnScreen_Title_IDChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this.OnRecieve_PriceChanging(value);
					this.SendPropertyChanging();
					this._Recieve_Price = value;
					this.SendPropertyChanged("Recieve_Price");
					this.OnRecieve_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producing_company_id", DbType="Int")]
		public System.Nullable<int> Producing_company_id
		{
			get
			{
				return this._Producing_company_id;
			}
			set
			{
				if ((this._Producing_company_id != value))
				{
					this.OnProducing_company_idChanging(value);
					this.SendPropertyChanging();
					this._Producing_company_id = value;
					this.SendPropertyChanged("Producing_company_id");
					this.OnProducing_company_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screen_Title_ID", DbType="Int")]
		public System.Nullable<int> Screen_Title_ID
		{
			get
			{
				return this._Screen_Title_ID;
			}
			set
			{
				if ((this._Screen_Title_ID != value))
				{
					this.OnScreen_Title_IDChanging(value);
					this.SendPropertyChanging();
					this._Screen_Title_ID = value;
					this.SendPropertyChanged("Screen_Title_ID");
					this.OnScreen_Title_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login_Tbl")]
	public partial class login_Tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _tel;
		
		private string _email;
		
		private string _add_ress;
		
		private string _hint;
		
		private System.Nullable<int> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onadd_ressChanging(string value);
    partial void Onadd_ressChanged();
    partial void OnhintChanging(string value);
    partial void OnhintChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    #endregion
		
		public login_Tbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(50)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_ress", DbType="NVarChar(50)")]
		public string add_ress
		{
			get
			{
				return this._add_ress;
			}
			set
			{
				if ((this._add_ress != value))
				{
					this.Onadd_ressChanging(value);
					this.SendPropertyChanging();
					this._add_ress = value;
					this.SendPropertyChanged("add_ress");
					this.Onadd_ressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hint", DbType="NVarChar(50)")]
		public string hint
		{
			get
			{
				return this._hint;
			}
			set
			{
				if ((this._hint != value))
				{
					this.OnhintChanging(value);
					this.SendPropertyChanging();
					this._hint = value;
					this.SendPropertyChanged("hint");
					this.OnhintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_In")]
	public partial class Payment_In : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _cashir_id;
		
		private System.DateTime _pay_date;
		
		private double _price;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncashir_idChanging(int value);
    partial void Oncashir_idChanged();
    partial void Onpay_dateChanging(System.DateTime value);
    partial void Onpay_dateChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Payment_In()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashir_id", DbType="Int NOT NULL")]
		public int cashir_id
		{
			get
			{
				return this._cashir_id;
			}
			set
			{
				if ((this._cashir_id != value))
				{
					this.Oncashir_idChanging(value);
					this.SendPropertyChanging();
					this._cashir_id = value;
					this.SendPropertyChanged("cashir_id");
					this.Oncashir_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="Date NOT NULL")]
		public System.DateTime pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producing_company")]
	public partial class Producing_company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Producing_company1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProducing_company1Changing(string value);
    partial void OnProducing_company1Changed();
    #endregion
		
		public Producing_company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Producing_company", Storage="_Producing_company1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Producing_company1
		{
			get
			{
				return this._Producing_company1;
			}
			set
			{
				if ((this._Producing_company1 != value))
				{
					this.OnProducing_company1Changing(value);
					this.SendPropertyChanging();
					this._Producing_company1 = value;
					this.SendPropertyChanged("Producing_company1");
					this.OnProducing_company1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase_check")]
	public partial class Purchase_check
	{
		
		private int _ID;
		
		private System.DateTime _Recieve_Date;
		
		private string _Supplier_Name;
		
		private string _Company;
		
		private int _Casher_id;
		
		private double _Total_price;
		
		private string _Notes;
		
		private double _difference_col;
		
		private System.Nullable<double> _Discount_val;
		
		private System.Nullable<double> _Addition_val;
		
		private System.Nullable<double> _remaining_val;
		
		public Purchase_check()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Date", DbType="Date NOT NULL")]
		public System.DateTime Recieve_Date
		{
			get
			{
				return this._Recieve_Date;
			}
			set
			{
				if ((this._Recieve_Date != value))
				{
					this._Recieve_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Casher_id", DbType="Int NOT NULL")]
		public int Casher_id
		{
			get
			{
				return this._Casher_id;
			}
			set
			{
				if ((this._Casher_id != value))
				{
					this._Casher_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this._Discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this._Addition_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining_val", DbType="Float")]
		public System.Nullable<double> remaining_val
		{
			get
			{
				return this._remaining_val;
			}
			set
			{
				if ((this._remaining_val != value))
				{
					this._remaining_val = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchase_check_details")]
	public partial class purchase_check_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_ID;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		private System.Nullable<int> _purchase_check_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void Onpurchase_check_idChanging(System.Nullable<int> value);
    partial void Onpurchase_check_idChanged();
    #endregion
		
		public purchase_check_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_check_id", DbType="Int")]
		public System.Nullable<int> purchase_check_id
		{
			get
			{
				return this._purchase_check_id;
			}
			set
			{
				if ((this._purchase_check_id != value))
				{
					this.Onpurchase_check_idChanging(value);
					this.SendPropertyChanging();
					this._purchase_check_id = value;
					this.SendPropertyChanged("purchase_check_id");
					this.Onpurchase_check_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Returns_check")]
	public partial class Returns_check : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Return_Date;
		
		private string _Return_from;
		
		private int _cashier_id;
		
		private double _Total_price;
		
		private int _sale_check_id;
		
		private string _Notes;
		
		private System.Nullable<double> _difference_col;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReturn_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturn_DateChanged();
    partial void OnReturn_fromChanging(string value);
    partial void OnReturn_fromChanged();
    partial void Oncashier_idChanging(int value);
    partial void Oncashier_idChanged();
    partial void OnTotal_priceChanging(double value);
    partial void OnTotal_priceChanged();
    partial void Onsale_check_idChanging(int value);
    partial void Onsale_check_idChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void Ondifference_colChanging(System.Nullable<double> value);
    partial void Ondifference_colChanged();
    #endregion
		
		public Returns_check()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Return_Date
		{
			get
			{
				return this._Return_Date;
			}
			set
			{
				if ((this._Return_Date != value))
				{
					this.OnReturn_DateChanging(value);
					this.SendPropertyChanging();
					this._Return_Date = value;
					this.SendPropertyChanged("Return_Date");
					this.OnReturn_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this.OnReturn_fromChanging(value);
					this.SendPropertyChanging();
					this._Return_from = value;
					this.SendPropertyChanged("Return_from");
					this.OnReturn_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashier_id", DbType="Int NOT NULL")]
		public int cashier_id
		{
			get
			{
				return this._cashier_id;
			}
			set
			{
				if ((this._cashier_id != value))
				{
					this.Oncashier_idChanging(value);
					this.SendPropertyChanging();
					this._cashier_id = value;
					this.SendPropertyChanged("cashier_id");
					this.Oncashier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this.OnTotal_priceChanging(value);
					this.SendPropertyChanging();
					this._Total_price = value;
					this.SendPropertyChanged("Total_price");
					this.OnTotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_check_id", DbType="Int NOT NULL")]
		public int sale_check_id
		{
			get
			{
				return this._sale_check_id;
			}
			set
			{
				if ((this._sale_check_id != value))
				{
					this.Onsale_check_idChanging(value);
					this.SendPropertyChanging();
					this._sale_check_id = value;
					this.SendPropertyChanged("sale_check_id");
					this.Onsale_check_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this.Ondifference_colChanging(value);
					this.SendPropertyChanging();
					this._difference_col = value;
					this.SendPropertyChanged("difference_col");
					this.Ondifference_colChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Returns_check_details")]
	public partial class Returns_check_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_ID;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		private int _Returns_check_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnReturns_check_idChanging(int value);
    partial void OnReturns_check_idChanged();
    #endregion
		
		public Returns_check_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Returns_check_id", DbType="Int NOT NULL")]
		public int Returns_check_id
		{
			get
			{
				return this._Returns_check_id;
			}
			set
			{
				if ((this._Returns_check_id != value))
				{
					this.OnReturns_check_idChanging(value);
					this.SendPropertyChanging();
					this._Returns_check_id = value;
					this.SendPropertyChanged("Returns_check_id");
					this.OnReturns_check_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_check")]
	public partial class Sale_check : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _sale_Date;
		
		private string _Sale_To;
		
		private int _Seller_id;
		
		private double _Total_price;
		
		private string _Notes;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _Discount_val;
		
		private System.Nullable<double> _Addition_val;
		
		private System.Nullable<double> _remaining_val;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onsale_DateChanging(System.Nullable<System.DateTime> value);
    partial void Onsale_DateChanged();
    partial void OnSale_ToChanging(string value);
    partial void OnSale_ToChanged();
    partial void OnSeller_idChanging(int value);
    partial void OnSeller_idChanged();
    partial void OnTotal_priceChanging(double value);
    partial void OnTotal_priceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void Ondifference_colChanging(System.Nullable<double> value);
    partial void Ondifference_colChanged();
    partial void OnDiscount_valChanging(System.Nullable<double> value);
    partial void OnDiscount_valChanged();
    partial void OnAddition_valChanging(System.Nullable<double> value);
    partial void OnAddition_valChanged();
    partial void Onremaining_valChanging(System.Nullable<double> value);
    partial void Onremaining_valChanged();
    #endregion
		
		public Sale_check()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_Date", DbType="Date")]
		public System.Nullable<System.DateTime> sale_Date
		{
			get
			{
				return this._sale_Date;
			}
			set
			{
				if ((this._sale_Date != value))
				{
					this.Onsale_DateChanging(value);
					this.SendPropertyChanging();
					this._sale_Date = value;
					this.SendPropertyChanged("sale_Date");
					this.Onsale_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this.OnSale_ToChanging(value);
					this.SendPropertyChanging();
					this._Sale_To = value;
					this.SendPropertyChanged("Sale_To");
					this.OnSale_ToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seller_id", DbType="Int NOT NULL")]
		public int Seller_id
		{
			get
			{
				return this._Seller_id;
			}
			set
			{
				if ((this._Seller_id != value))
				{
					this.OnSeller_idChanging(value);
					this.SendPropertyChanging();
					this._Seller_id = value;
					this.SendPropertyChanged("Seller_id");
					this.OnSeller_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this.OnTotal_priceChanging(value);
					this.SendPropertyChanging();
					this._Total_price = value;
					this.SendPropertyChanged("Total_price");
					this.OnTotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this.Ondifference_colChanging(value);
					this.SendPropertyChanging();
					this._difference_col = value;
					this.SendPropertyChanged("difference_col");
					this.Ondifference_colChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this.OnDiscount_valChanging(value);
					this.SendPropertyChanging();
					this._Discount_val = value;
					this.SendPropertyChanged("Discount_val");
					this.OnDiscount_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this.OnAddition_valChanging(value);
					this.SendPropertyChanging();
					this._Addition_val = value;
					this.SendPropertyChanged("Addition_val");
					this.OnAddition_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining_val", DbType="Float")]
		public System.Nullable<double> remaining_val
		{
			get
			{
				return this._remaining_val;
			}
			set
			{
				if ((this._remaining_val != value))
				{
					this.Onremaining_valChanging(value);
					this.SendPropertyChanging();
					this._remaining_val = value;
					this.SendPropertyChanged("remaining_val");
					this.Onremaining_valChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Screen_Title")]
	public partial class Screen_Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Screen_Title1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScreen_Title1Changing(string value);
    partial void OnScreen_Title1Changed();
    #endregion
		
		public Screen_Title()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Screen_Title", Storage="_Screen_Title1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Screen_Title1
		{
			get
			{
				return this._Screen_Title1;
			}
			set
			{
				if ((this._Screen_Title1 != value))
				{
					this.OnScreen_Title1Changing(value);
					this.SendPropertyChanging();
					this._Screen_Title1 = value;
					this.SendPropertyChanged("Screen_Title1");
					this.OnScreen_Title1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysdiagrams")]
	public partial class sysdiagram
	{
		
		private string _name;
		
		private int _principal_id;
		
		private int _diagram_id;
		
		private System.Nullable<int> _version;
		
		private System.Data.Linq.Binary _definition;
		
		public sysdiagram()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_principal_id", DbType="Int NOT NULL")]
		public int principal_id
		{
			get
			{
				return this._principal_id;
			}
			set
			{
				if ((this._principal_id != value))
				{
					this._principal_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagram_id", DbType="Int NOT NULL")]
		public int diagram_id
		{
			get
			{
				return this._diagram_id;
			}
			set
			{
				if ((this._diagram_id != value))
				{
					this._diagram_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int")]
		public System.Nullable<int> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this._version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_definition", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary definition
		{
			get
			{
				return this._definition;
			}
			set
			{
				if ((this._definition != value))
				{
					this._definition = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type_item")]
	public partial class Type_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Type_item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_check_details")]
	public partial class Sale_check_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_ID;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		private System.Nullable<int> _Sale_check_id;
		
		private System.Nullable<double> _item_sale_price;
		
		private System.Nullable<double> _Paid_price_item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSale_check_idChanging(System.Nullable<int> value);
    partial void OnSale_check_idChanged();
    partial void Onitem_sale_priceChanging(System.Nullable<double> value);
    partial void Onitem_sale_priceChanged();
    partial void OnPaid_price_itemChanging(System.Nullable<double> value);
    partial void OnPaid_price_itemChanged();
    #endregion
		
		public Sale_check_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_check_id", DbType="Int")]
		public System.Nullable<int> Sale_check_id
		{
			get
			{
				return this._Sale_check_id;
			}
			set
			{
				if ((this._Sale_check_id != value))
				{
					this.OnSale_check_idChanging(value);
					this.SendPropertyChanging();
					this._Sale_check_id = value;
					this.SendPropertyChanged("Sale_check_id");
					this.OnSale_check_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_sale_price", DbType="Float")]
		public System.Nullable<double> item_sale_price
		{
			get
			{
				return this._item_sale_price;
			}
			set
			{
				if ((this._item_sale_price != value))
				{
					this.Onitem_sale_priceChanging(value);
					this.SendPropertyChanging();
					this._item_sale_price = value;
					this.SendPropertyChanged("item_sale_price");
					this.Onitem_sale_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid_price_item", DbType="Float")]
		public System.Nullable<double> Paid_price_item
		{
			get
			{
				return this._Paid_price_item;
			}
			set
			{
				if ((this._Paid_price_item != value))
				{
					this.OnPaid_price_itemChanging(value);
					this.SendPropertyChanging();
					this._Paid_price_item = value;
					this.SendPropertyChanged("Paid_price_item");
					this.OnPaid_price_itemChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_Out")]
	public partial class Payment_Out : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Cashier_ID;
		
		private System.DateTime _Pay_Date;
		
		private double _Price;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCashier_IDChanging(int value);
    partial void OnCashier_IDChanged();
    partial void OnPay_DateChanging(System.DateTime value);
    partial void OnPay_DateChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Payment_Out()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier_ID", DbType="Int NOT NULL")]
		public int Cashier_ID
		{
			get
			{
				return this._Cashier_ID;
			}
			set
			{
				if ((this._Cashier_ID != value))
				{
					this.OnCashier_IDChanging(value);
					this.SendPropertyChanging();
					this._Cashier_ID = value;
					this.SendPropertyChanged("Cashier_ID");
					this.OnCashier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pay_Date", DbType="Date NOT NULL")]
		public System.DateTime Pay_Date
		{
			get
			{
				return this._Pay_Date;
			}
			set
			{
				if ((this._Pay_Date != value))
				{
					this.OnPay_DateChanging(value);
					this.SendPropertyChanging();
					this._Pay_Date = value;
					this.SendPropertyChanged("Pay_Date");
					this.OnPay_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Items")]
	public partial class Used_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Type;
		
		private int _Count;
		
		private double _Recieve_Price;
		
		private double _Sale_Price;
		
		private string _Notes;
		
		private int _Producing_Company_id;
		
		private int _Screen_Title_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRecieve_PriceChanging(double value);
    partial void OnRecieve_PriceChanged();
    partial void OnSale_PriceChanging(double value);
    partial void OnSale_PriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnProducing_Company_idChanging(int value);
    partial void OnProducing_Company_idChanged();
    partial void OnScreen_Title_idChanging(int value);
    partial void OnScreen_Title_idChanged();
    #endregion
		
		public Used_Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this.OnRecieve_PriceChanging(value);
					this.SendPropertyChanging();
					this._Recieve_Price = value;
					this.SendPropertyChanged("Recieve_Price");
					this.OnRecieve_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producing_Company_id", DbType="Int NOT NULL")]
		public int Producing_Company_id
		{
			get
			{
				return this._Producing_Company_id;
			}
			set
			{
				if ((this._Producing_Company_id != value))
				{
					this.OnProducing_Company_idChanging(value);
					this.SendPropertyChanging();
					this._Producing_Company_id = value;
					this.SendPropertyChanged("Producing_Company_id");
					this.OnProducing_Company_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screen_Title_id", DbType="Int NOT NULL")]
		public int Screen_Title_id
		{
			get
			{
				return this._Screen_Title_id;
			}
			set
			{
				if ((this._Screen_Title_id != value))
				{
					this.OnScreen_Title_idChanging(value);
					this.SendPropertyChanging();
					this._Screen_Title_id = value;
					this.SendPropertyChanged("Screen_Title_id");
					this.OnScreen_Title_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Payment_In")]
	public partial class Used_Payment_In : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Cashier_ID;
		
		private System.DateTime _pay_date;
		
		private double _price;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCashier_IDChanging(int value);
    partial void OnCashier_IDChanged();
    partial void Onpay_dateChanging(System.DateTime value);
    partial void Onpay_dateChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Used_Payment_In()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier_ID", DbType="Int NOT NULL")]
		public int Cashier_ID
		{
			get
			{
				return this._Cashier_ID;
			}
			set
			{
				if ((this._Cashier_ID != value))
				{
					this.OnCashier_IDChanging(value);
					this.SendPropertyChanging();
					this._Cashier_ID = value;
					this.SendPropertyChanged("Cashier_ID");
					this.OnCashier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="Date NOT NULL")]
		public System.DateTime pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Payment_Out")]
	public partial class Used_Payment_Out
	{
		
		private int _ID;
		
		private int _Cashier_ID;
		
		private System.DateTime _Pay_Date;
		
		private double _Price;
		
		private string _Name;
		
		public Used_Payment_Out()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier_ID", DbType="Int NOT NULL")]
		public int Cashier_ID
		{
			get
			{
				return this._Cashier_ID;
			}
			set
			{
				if ((this._Cashier_ID != value))
				{
					this._Cashier_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pay_Date", DbType="Date NOT NULL")]
		public System.DateTime Pay_Date
		{
			get
			{
				return this._Pay_Date;
			}
			set
			{
				if ((this._Pay_Date != value))
				{
					this._Pay_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Purchase_check")]
	public partial class Used_Purchase_check
	{
		
		private int _ID;
		
		private System.DateTime _Recieve_date;
		
		private string _Supplier_Name;
		
		private string _Company;
		
		private int _Cashier_id;
		
		private double _Total_Price;
		
		private string _Notes;
		
		private double _Difference_col;
		
		private System.Nullable<double> _Discount_Val;
		
		private System.Nullable<double> _Addition_Val;
		
		private System.Nullable<double> _remaining_Val;
		
		public Used_Purchase_check()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_date", DbType="Date NOT NULL")]
		public System.DateTime Recieve_date
		{
			get
			{
				return this._Recieve_date;
			}
			set
			{
				if ((this._Recieve_date != value))
				{
					this._Recieve_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier_id", DbType="Int NOT NULL")]
		public int Cashier_id
		{
			get
			{
				return this._Cashier_id;
			}
			set
			{
				if ((this._Cashier_id != value))
				{
					this._Cashier_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Float NOT NULL")]
		public double Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this._Total_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difference_col", DbType="Float NOT NULL")]
		public double Difference_col
		{
			get
			{
				return this._Difference_col;
			}
			set
			{
				if ((this._Difference_col != value))
				{
					this._Difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_Val", DbType="Float")]
		public System.Nullable<double> Discount_Val
		{
			get
			{
				return this._Discount_Val;
			}
			set
			{
				if ((this._Discount_Val != value))
				{
					this._Discount_Val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_Val", DbType="Float")]
		public System.Nullable<double> Addition_Val
		{
			get
			{
				return this._Addition_Val;
			}
			set
			{
				if ((this._Addition_Val != value))
				{
					this._Addition_Val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining_Val", DbType="Float")]
		public System.Nullable<double> remaining_Val
		{
			get
			{
				return this._remaining_Val;
			}
			set
			{
				if ((this._remaining_Val != value))
				{
					this._remaining_Val = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Purchase_Check_details")]
	public partial class Used_Purchase_Check_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_ID;
		
		private int _Count;
		
		private double _Price;
		
		private string _Notes;
		
		private System.Nullable<int> _purchase_check_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void Onpurchase_check_idChanging(System.Nullable<int> value);
    partial void Onpurchase_check_idChanged();
    #endregion
		
		public Used_Purchase_Check_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_check_id", DbType="Int")]
		public System.Nullable<int> purchase_check_id
		{
			get
			{
				return this._purchase_check_id;
			}
			set
			{
				if ((this._purchase_check_id != value))
				{
					this.Onpurchase_check_idChanging(value);
					this.SendPropertyChanging();
					this._purchase_check_id = value;
					this.SendPropertyChanged("purchase_check_id");
					this.Onpurchase_check_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Return_check")]
	public partial class Used_Return_check : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Return_Date;
		
		private string _Return_from;
		
		private int _cashier_id;
		
		private double _Total_Price;
		
		private int _sale_check_id;
		
		private string _Notes;
		
		private System.Nullable<double> _difference_col;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReturn_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturn_DateChanged();
    partial void OnReturn_fromChanging(string value);
    partial void OnReturn_fromChanged();
    partial void Oncashier_idChanging(int value);
    partial void Oncashier_idChanged();
    partial void OnTotal_PriceChanging(double value);
    partial void OnTotal_PriceChanged();
    partial void Onsale_check_idChanging(int value);
    partial void Onsale_check_idChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void Ondifference_colChanging(System.Nullable<double> value);
    partial void Ondifference_colChanged();
    #endregion
		
		public Used_Return_check()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Return_Date
		{
			get
			{
				return this._Return_Date;
			}
			set
			{
				if ((this._Return_Date != value))
				{
					this.OnReturn_DateChanging(value);
					this.SendPropertyChanging();
					this._Return_Date = value;
					this.SendPropertyChanged("Return_Date");
					this.OnReturn_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this.OnReturn_fromChanging(value);
					this.SendPropertyChanging();
					this._Return_from = value;
					this.SendPropertyChanged("Return_from");
					this.OnReturn_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashier_id", DbType="Int NOT NULL")]
		public int cashier_id
		{
			get
			{
				return this._cashier_id;
			}
			set
			{
				if ((this._cashier_id != value))
				{
					this.Oncashier_idChanging(value);
					this.SendPropertyChanging();
					this._cashier_id = value;
					this.SendPropertyChanged("cashier_id");
					this.Oncashier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Float NOT NULL")]
		public double Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_check_id", DbType="Int NOT NULL")]
		public int sale_check_id
		{
			get
			{
				return this._sale_check_id;
			}
			set
			{
				if ((this._sale_check_id != value))
				{
					this.Onsale_check_idChanging(value);
					this.SendPropertyChanging();
					this._sale_check_id = value;
					this.SendPropertyChanged("sale_check_id");
					this.Onsale_check_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this.Ondifference_colChanging(value);
					this.SendPropertyChanging();
					this._difference_col = value;
					this.SendPropertyChanged("difference_col");
					this.Ondifference_colChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Return_Check_details")]
	public partial class Used_Return_Check_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_ID;
		
		private int _Count;
		
		private double _Price;
		
		private string _Notes;
		
		private int _Return_check_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnReturn_check_idChanging(int value);
    partial void OnReturn_check_idChanged();
    #endregion
		
		public Used_Return_Check_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_check_id", DbType="Int NOT NULL")]
		public int Return_check_id
		{
			get
			{
				return this._Return_check_id;
			}
			set
			{
				if ((this._Return_check_id != value))
				{
					this.OnReturn_check_idChanging(value);
					this.SendPropertyChanging();
					this._Return_check_id = value;
					this.SendPropertyChanged("Return_check_id");
					this.OnReturn_check_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Sale_Check")]
	public partial class Used_Sale_Check : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Sale_date;
		
		private string _Sale_to;
		
		private int _Seller_id;
		
		private double _Total_Price;
		
		private string _Notes;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _Discount_val;
		
		private System.Nullable<double> _Addition_val;
		
		private System.Nullable<double> _remaining_val;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSale_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnSale_dateChanged();
    partial void OnSale_toChanging(string value);
    partial void OnSale_toChanged();
    partial void OnSeller_idChanging(int value);
    partial void OnSeller_idChanged();
    partial void OnTotal_PriceChanging(double value);
    partial void OnTotal_PriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void Ondifference_colChanging(System.Nullable<double> value);
    partial void Ondifference_colChanged();
    partial void OnDiscount_valChanging(System.Nullable<double> value);
    partial void OnDiscount_valChanged();
    partial void OnAddition_valChanging(System.Nullable<double> value);
    partial void OnAddition_valChanged();
    partial void Onremaining_valChanging(System.Nullable<double> value);
    partial void Onremaining_valChanged();
    #endregion
		
		public Used_Sale_Check()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_date", DbType="Date")]
		public System.Nullable<System.DateTime> Sale_date
		{
			get
			{
				return this._Sale_date;
			}
			set
			{
				if ((this._Sale_date != value))
				{
					this.OnSale_dateChanging(value);
					this.SendPropertyChanging();
					this._Sale_date = value;
					this.SendPropertyChanged("Sale_date");
					this.OnSale_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_to", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_to
		{
			get
			{
				return this._Sale_to;
			}
			set
			{
				if ((this._Sale_to != value))
				{
					this.OnSale_toChanging(value);
					this.SendPropertyChanging();
					this._Sale_to = value;
					this.SendPropertyChanged("Sale_to");
					this.OnSale_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seller_id", DbType="Int NOT NULL")]
		public int Seller_id
		{
			get
			{
				return this._Seller_id;
			}
			set
			{
				if ((this._Seller_id != value))
				{
					this.OnSeller_idChanging(value);
					this.SendPropertyChanging();
					this._Seller_id = value;
					this.SendPropertyChanged("Seller_id");
					this.OnSeller_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Float NOT NULL")]
		public double Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this.Ondifference_colChanging(value);
					this.SendPropertyChanging();
					this._difference_col = value;
					this.SendPropertyChanged("difference_col");
					this.Ondifference_colChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this.OnDiscount_valChanging(value);
					this.SendPropertyChanging();
					this._Discount_val = value;
					this.SendPropertyChanged("Discount_val");
					this.OnDiscount_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this.OnAddition_valChanging(value);
					this.SendPropertyChanging();
					this._Addition_val = value;
					this.SendPropertyChanged("Addition_val");
					this.OnAddition_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining_val", DbType="Float")]
		public System.Nullable<double> remaining_val
		{
			get
			{
				return this._remaining_val;
			}
			set
			{
				if ((this._remaining_val != value))
				{
					this.Onremaining_valChanging(value);
					this.SendPropertyChanging();
					this._remaining_val = value;
					this.SendPropertyChanged("remaining_val");
					this.Onremaining_valChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Used_Sale_Check_details")]
	public partial class Used_Sale_Check_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_ID;
		
		private int _Count;
		
		private double _Price;
		
		private string _Notes;
		
		private System.Nullable<int> _Sale_check_id;
		
		private System.Nullable<double> _Item_Sale_Price;
		
		private System.Nullable<double> _Paid_Item_Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSale_check_idChanging(System.Nullable<int> value);
    partial void OnSale_check_idChanged();
    partial void OnItem_Sale_PriceChanging(System.Nullable<double> value);
    partial void OnItem_Sale_PriceChanged();
    partial void OnPaid_Item_PriceChanging(System.Nullable<double> value);
    partial void OnPaid_Item_PriceChanged();
    #endregion
		
		public Used_Sale_Check_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_check_id", DbType="Int")]
		public System.Nullable<int> Sale_check_id
		{
			get
			{
				return this._Sale_check_id;
			}
			set
			{
				if ((this._Sale_check_id != value))
				{
					this.OnSale_check_idChanging(value);
					this.SendPropertyChanging();
					this._Sale_check_id = value;
					this.SendPropertyChanged("Sale_check_id");
					this.OnSale_check_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Sale_Price", DbType="Float")]
		public System.Nullable<double> Item_Sale_Price
		{
			get
			{
				return this._Item_Sale_Price;
			}
			set
			{
				if ((this._Item_Sale_Price != value))
				{
					this.OnItem_Sale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Item_Sale_Price = value;
					this.SendPropertyChanged("Item_Sale_Price");
					this.OnItem_Sale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid_Item_Price", DbType="Float")]
		public System.Nullable<double> Paid_Item_Price
		{
			get
			{
				return this._Paid_Item_Price;
			}
			set
			{
				if ((this._Paid_Item_Price != value))
				{
					this.OnPaid_Item_PriceChanging(value);
					this.SendPropertyChanging();
					this._Paid_Item_Price = value;
					this.SendPropertyChanged("Paid_Item_Price");
					this.OnPaid_Item_PriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_Return_clients")]
	public partial class Payment_Return_client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Cashier_id;
		
		private System.Nullable<System.DateTime> _pay_date;
		
		private System.Nullable<double> _price;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCashier_idChanging(System.Nullable<int> value);
    partial void OnCashier_idChanged();
    partial void Onpay_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpay_dateChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Payment_Return_client()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cashier_id", DbType="Int")]
		public System.Nullable<int> Cashier_id
		{
			get
			{
				return this._Cashier_id;
			}
			set
			{
				if ((this._Cashier_id != value))
				{
					this.OnCashier_idChanging(value);
					this.SendPropertyChanging();
					this._Cashier_id = value;
					this.SendPropertyChanged("Cashier_id");
					this.OnCashier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="Date")]
		public System.Nullable<System.DateTime> pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment_Return_Clients_Used")]
	public partial class Payment_Return_Clients_Used : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Casheir_id;
		
		private System.Nullable<System.DateTime> _pay_date;
		
		private System.Nullable<double> _price;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCasheir_idChanging(System.Nullable<int> value);
    partial void OnCasheir_idChanged();
    partial void Onpay_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpay_dateChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Payment_Return_Clients_Used()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Casheir_id", DbType="Int")]
		public System.Nullable<int> Casheir_id
		{
			get
			{
				return this._Casheir_id;
			}
			set
			{
				if ((this._Casheir_id != value))
				{
					this.OnCasheir_idChanging(value);
					this.SendPropertyChanging();
					this._Casheir_id = value;
					this.SendPropertyChanged("Casheir_id");
					this.OnCasheir_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="Date")]
		public System.Nullable<System.DateTime> pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class get_purch_check_idResult
	{
		
		private int _ID;
		
		private System.DateTime _Recieve_Date;
		
		private string _Supplier_Name;
		
		private string _UserName;
		
		private string _Company;
		
		private System.Nullable<double> _Total;
		
		private System.Nullable<double> _diff;
		
		private double _difference_col;
		
		private System.Nullable<double> _Discount_val;
		
		private System.Nullable<double> _Addition_val;
		
		private double _Recieve_Price;
		
		private string _purch_details_notes;
		
		private int _count;
		
		private int _Item_ID;
		
		private string _Name;
		
		private string _item_details;
		
		private double _Price;
		
		public get_purch_check_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Date", DbType="Date NOT NULL")]
		public System.DateTime Recieve_Date
		{
			get
			{
				return this._Recieve_Date;
			}
			set
			{
				if ((this._Recieve_Date != value))
				{
					this._Recieve_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this._Discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this._Addition_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purch_details_notes", DbType="NVarChar(50)")]
		public string purch_details_notes
		{
			get
			{
				return this._purch_details_notes;
			}
			set
			{
				if ((this._purch_details_notes != value))
				{
					this._purch_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_details", DbType="NVarChar(50)")]
		public string item_details
		{
			get
			{
				return this._item_details;
			}
			set
			{
				if ((this._item_details != value))
				{
					this._item_details = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class get_sale_check_by_idResult
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _sale_Date;
		
		private string _Sale_To;
		
		private string _UserName;
		
		private System.Nullable<double> _TotalPrice;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _remaining;
		
		private System.Nullable<double> _Addition_val;
		
		private System.Nullable<double> _Discount_val;
		
		private string _sale_details_notes;
		
		private int _Item_ID;
		
		private string _Name;
		
		private int _count;
		
		private double _Price;
		
		private string _item_notes;
		
		public get_sale_check_by_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_Date", DbType="Date")]
		public System.Nullable<System.DateTime> sale_Date
		{
			get
			{
				return this._sale_Date;
			}
			set
			{
				if ((this._sale_Date != value))
				{
					this._sale_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this._Sale_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining", DbType="Float")]
		public System.Nullable<double> remaining
		{
			get
			{
				return this._remaining;
			}
			set
			{
				if ((this._remaining != value))
				{
					this._remaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this._Addition_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this._Discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_details_notes", DbType="NVarChar(50)")]
		public string sale_details_notes
		{
			get
			{
				return this._sale_details_notes;
			}
			set
			{
				if ((this._sale_details_notes != value))
				{
					this._sale_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_notes", DbType="NVarChar(50)")]
		public string item_notes
		{
			get
			{
				return this._item_notes;
			}
			set
			{
				if ((this._item_notes != value))
				{
					this._item_notes = value;
				}
			}
		}
	}
	
	public partial class get_sale_check_by_id2Result
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _sale_Date;
		
		private string _Sale_To;
		
		private string _UserName;
		
		private System.Nullable<double> _TotalPrice;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _remaining;
		
		private System.Nullable<double> _Addition_val;
		
		private System.Nullable<double> _Discount_val;
		
		private string _sale_details_notes;
		
		private int _Item_ID;
		
		private string _Name;
		
		private int _count;
		
		private double _Price;
		
		private string _item_notes;
		
		public get_sale_check_by_id2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_Date", DbType="Date")]
		public System.Nullable<System.DateTime> sale_Date
		{
			get
			{
				return this._sale_Date;
			}
			set
			{
				if ((this._sale_Date != value))
				{
					this._sale_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this._Sale_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining", DbType="Float")]
		public System.Nullable<double> remaining
		{
			get
			{
				return this._remaining;
			}
			set
			{
				if ((this._remaining != value))
				{
					this._remaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this._Addition_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this._Discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_details_notes", DbType="NVarChar(50)")]
		public string sale_details_notes
		{
			get
			{
				return this._sale_details_notes;
			}
			set
			{
				if ((this._sale_details_notes != value))
				{
					this._sale_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_notes", DbType="NVarChar(50)")]
		public string item_notes
		{
			get
			{
				return this._item_notes;
			}
			set
			{
				if ((this._item_notes != value))
				{
					this._item_notes = value;
				}
			}
		}
	}
	
	public partial class purch_checks_dateResult
	{
		
		private int _ID;
		
		private string _Company;
		
		private string _Supplier_Name;
		
		private string _UserName;
		
		private double _Total_price;
		
		private double _difference_col;
		
		private double _diff;
		
		private string _Notes;
		
		public purch_checks_dateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float NOT NULL")]
		public double diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class purch_checks_monthResult
	{
		
		private int _ID;
		
		private string _Company;
		
		private string _Supplier_Name;
		
		private string _UserName;
		
		private double _Total_price;
		
		private double _difference_col;
		
		private double _diff;
		
		private string _Notes;
		
		public purch_checks_monthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float NOT NULL")]
		public double diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class purch_detailsResult
	{
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Recieve_Price;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		public purch_detailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class report_checks_between_datesResult
	{
		
		private int _ID;
		
		private string _Supplier_Name;
		
		private string _Company;
		
		private string _UserName;
		
		private double _Total_price;
		
		private double _difference_col;
		
		private double _diff;
		
		private string _Notes;
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Price;
		
		private int _count;
		
		private double _Recieve_Price;
		
		public report_checks_between_datesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float NOT NULL")]
		public double diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
	}
	
	public partial class return_checks_dateResult
	{
		
		private int _ID;
		
		private string _Return_from;
		
		private string _UserName;
		
		private double _Total_price;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _diff;
		
		private string _Notes;
		
		public return_checks_dateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this._Return_from = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class return_checks_monthResult
	{
		
		private int _ID;
		
		private string _Return_from;
		
		private string _UserName;
		
		private double _Total_price;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _diff;
		
		private string _Notes;
		
		public return_checks_monthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this._Return_from = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class return_detailsResult
	{
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Sale_Price;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		public return_detailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this._Sale_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class sale_checks_dateResult
	{
		
		private int _ID;
		
		private string _Sale_To;
		
		private string _UserName;
		
		private double _Total_price;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _diff;
		
		private string _Notes;
		
		public sale_checks_dateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this._Sale_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class sale_checks_monthResult
	{
		
		private int _ID;
		
		private string _Sale_To;
		
		private string _UserName;
		
		private double _Total_price;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _diff;
		
		private string _Notes;
		
		public sale_checks_monthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this._Sale_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class sale_detailsResult
	{
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Sale_Price;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		public sale_detailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this._Sale_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class select_purchase_reportResult
	{
		
		private string _Name;
		
		private System.DateTime _Recieve_Date;
		
		private double _total_cost_for_goods;
		
		private string _Supplier_Name;
		
		private string _Company;
		
		private string _casheir_name;
		
		private double _Recieve_Price;
		
		private int _ID;
		
		private int _count;
		
		private double _difference_col;
		
		public select_purchase_reportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Date", DbType="Date NOT NULL")]
		public System.DateTime Recieve_Date
		{
			get
			{
				return this._Recieve_Date;
			}
			set
			{
				if ((this._Recieve_Date != value))
				{
					this._Recieve_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[total cost for goods]", Storage="_total_cost_for_goods", DbType="Float NOT NULL")]
		public double total_cost_for_goods
		{
			get
			{
				return this._total_cost_for_goods;
			}
			set
			{
				if ((this._total_cost_for_goods != value))
				{
					this._total_cost_for_goods = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[casheir name]", Storage="_casheir_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string casheir_name
		{
			get
			{
				return this._casheir_name;
			}
			set
			{
				if ((this._casheir_name != value))
				{
					this._casheir_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
	}
	
	public partial class get_return_sale_check_by_idResult
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Return_Date;
		
		private string _Return_from;
		
		private string _UserName;
		
		private System.Nullable<double> _Total;
		
		private System.Nullable<double> _paid_mount;
		
		private string _return_details_notes;
		
		private System.Nullable<double> _remaining;
		
		private int _count;
		
		private int _Item_ID;
		
		private string _Name;
		
		private string _item_notes;
		
		private double _Price;
		
		public get_return_sale_check_by_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Return_Date
		{
			get
			{
				return this._Return_Date;
			}
			set
			{
				if ((this._Return_Date != value))
				{
					this._Return_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this._Return_from = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[paid mount]", Storage="_paid_mount", DbType="Float")]
		public System.Nullable<double> paid_mount
		{
			get
			{
				return this._paid_mount;
			}
			set
			{
				if ((this._paid_mount != value))
				{
					this._paid_mount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_details_notes", DbType="NVarChar(50)")]
		public string return_details_notes
		{
			get
			{
				return this._return_details_notes;
			}
			set
			{
				if ((this._return_details_notes != value))
				{
					this._return_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining", DbType="Float")]
		public System.Nullable<double> remaining
		{
			get
			{
				return this._remaining;
			}
			set
			{
				if ((this._remaining != value))
				{
					this._remaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_notes", DbType="NVarChar(50)")]
		public string item_notes
		{
			get
			{
				return this._item_notes;
			}
			set
			{
				if ((this._item_notes != value))
				{
					this._item_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class get_store_itemsResult
	{
		
		private string _Items_Names;
		
		private int _ID;
		
		private int _quantity;
		
		private double _Recieve_Price;
		
		private double _Sale_Price;
		
		public get_store_itemsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items_Names", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Items_Names
		{
			get
			{
				return this._Items_Names;
			}
			set
			{
				if ((this._Items_Names != value))
				{
					this._Items_Names = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this._quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this._Sale_Price = value;
				}
			}
		}
	}
	
	public partial class Used_get_purch_check_idResult
	{
		
		private int _ID;
		
		private System.DateTime _Recieve_Date;
		
		private string _Supplier_Name;
		
		private string _UserName;
		
		private string _Company;
		
		private System.Nullable<double> _Total;
		
		private System.Nullable<double> _diff;
		
		private double _difference_col;
		
		private System.Nullable<double> _Discount_val;
		
		private System.Nullable<double> _Addition_val;
		
		private double _Recieve_Price;
		
		private string _purch_details_notes;
		
		private int _count;
		
		private int _Item_ID;
		
		private string _Name;
		
		private string _item_details;
		
		private double _Price;
		
		public Used_get_purch_check_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Date", DbType="Date NOT NULL")]
		public System.DateTime Recieve_Date
		{
			get
			{
				return this._Recieve_Date;
			}
			set
			{
				if ((this._Recieve_Date != value))
				{
					this._Recieve_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this._Discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this._Addition_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purch_details_notes", DbType="NVarChar(50)")]
		public string purch_details_notes
		{
			get
			{
				return this._purch_details_notes;
			}
			set
			{
				if ((this._purch_details_notes != value))
				{
					this._purch_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_details", DbType="NVarChar(50)")]
		public string item_details
		{
			get
			{
				return this._item_details;
			}
			set
			{
				if ((this._item_details != value))
				{
					this._item_details = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class Used_get_sale_check_by_id2Result
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _sale_Date;
		
		private string _Sale_To;
		
		private string _UserName;
		
		private System.Nullable<double> _TotalPrice;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _remaining;
		
		private System.Nullable<double> _Addition_val;
		
		private System.Nullable<double> _Discount_val;
		
		private string _sale_details_notes;
		
		private int _Item_ID;
		
		private string _Name;
		
		private int _count;
		
		private double _Price;
		
		private string _item_notes;
		
		public Used_get_sale_check_by_id2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_Date", DbType="Date")]
		public System.Nullable<System.DateTime> sale_Date
		{
			get
			{
				return this._sale_Date;
			}
			set
			{
				if ((this._sale_Date != value))
				{
					this._sale_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this._Sale_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining", DbType="Float")]
		public System.Nullable<double> remaining
		{
			get
			{
				return this._remaining;
			}
			set
			{
				if ((this._remaining != value))
				{
					this._remaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addition_val", DbType="Float")]
		public System.Nullable<double> Addition_val
		{
			get
			{
				return this._Addition_val;
			}
			set
			{
				if ((this._Addition_val != value))
				{
					this._Addition_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount_val", DbType="Float")]
		public System.Nullable<double> Discount_val
		{
			get
			{
				return this._Discount_val;
			}
			set
			{
				if ((this._Discount_val != value))
				{
					this._Discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_details_notes", DbType="NVarChar(50)")]
		public string sale_details_notes
		{
			get
			{
				return this._sale_details_notes;
			}
			set
			{
				if ((this._sale_details_notes != value))
				{
					this._sale_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_notes", DbType="NVarChar(50)")]
		public string item_notes
		{
			get
			{
				return this._item_notes;
			}
			set
			{
				if ((this._item_notes != value))
				{
					this._item_notes = value;
				}
			}
		}
	}
	
	public partial class Used_get_return_sale_check_by_idResult
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Return_Date;
		
		private string _Return_from;
		
		private string _UserName;
		
		private System.Nullable<double> _Total;
		
		private System.Nullable<double> _paid_mount;
		
		private string _return_details_notes;
		
		private System.Nullable<double> _remaining;
		
		private int _count;
		
		private int _Item_ID;
		
		private string _Name;
		
		private string _item_notes;
		
		private double _Price;
		
		public Used_get_return_sale_check_by_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Return_Date
		{
			get
			{
				return this._Return_Date;
			}
			set
			{
				if ((this._Return_Date != value))
				{
					this._Return_Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this._Return_from = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[paid mount]", Storage="_paid_mount", DbType="Float")]
		public System.Nullable<double> paid_mount
		{
			get
			{
				return this._paid_mount;
			}
			set
			{
				if ((this._paid_mount != value))
				{
					this._paid_mount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_details_notes", DbType="NVarChar(50)")]
		public string return_details_notes
		{
			get
			{
				return this._return_details_notes;
			}
			set
			{
				if ((this._return_details_notes != value))
				{
					this._return_details_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining", DbType="Float")]
		public System.Nullable<double> remaining
		{
			get
			{
				return this._remaining;
			}
			set
			{
				if ((this._remaining != value))
				{
					this._remaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_notes", DbType="NVarChar(50)")]
		public string item_notes
		{
			get
			{
				return this._item_notes;
			}
			set
			{
				if ((this._item_notes != value))
				{
					this._item_notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	public partial class USed_get_store_itemsResult
	{
		
		private string _Items_Names;
		
		private int _ID;
		
		private int _quantity;
		
		private double _Recieve_Price;
		
		private double _Sale_Price;
		
		public USed_get_store_itemsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items_Names", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Items_Names
		{
			get
			{
				return this._Items_Names;
			}
			set
			{
				if ((this._Items_Names != value))
				{
					this._Items_Names = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this._quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this._Sale_Price = value;
				}
			}
		}
	}
	
	public partial class Used_purch_checks_dateResult
	{
		
		private int _ID;
		
		private string _Company;
		
		private string _Supplier_Name;
		
		private string _UserName;
		
		private double _Total_price;
		
		private double _difference_col;
		
		private double _diff;
		
		private string _Notes;
		
		public Used_purch_checks_dateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier_Name
		{
			get
			{
				return this._Supplier_Name;
			}
			set
			{
				if ((this._Supplier_Name != value))
				{
					this._Supplier_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float NOT NULL")]
		public double difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float NOT NULL")]
		public double diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class Used_purch_detailsResult
	{
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Recieve_Price;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		public Used_purch_detailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieve_Price", DbType="Float NOT NULL")]
		public double Recieve_Price
		{
			get
			{
				return this._Recieve_Price;
			}
			set
			{
				if ((this._Recieve_Price != value))
				{
					this._Recieve_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class Used_sale_checks_dateResult
	{
		
		private int _ID;
		
		private string _Sale_To;
		
		private string _UserName;
		
		private double _Total_price;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _diff;
		
		private string _Notes;
		
		public Used_sale_checks_dateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_To", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sale_To
		{
			get
			{
				return this._Sale_To;
			}
			set
			{
				if ((this._Sale_To != value))
				{
					this._Sale_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class Used_sale_detailsResult
	{
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Sale_Price;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		public Used_sale_detailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this._Sale_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class Used_return_checks_dateResult
	{
		
		private int _ID;
		
		private string _Return_from;
		
		private string _UserName;
		
		private double _Total_price;
		
		private System.Nullable<double> _difference_col;
		
		private System.Nullable<double> _diff;
		
		private string _Notes;
		
		public Used_return_checks_dateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Return_from", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Return_from
		{
			get
			{
				return this._Return_from;
			}
			set
			{
				if ((this._Return_from != value))
				{
					this._Return_from = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_price", DbType="Float NOT NULL")]
		public double Total_price
		{
			get
			{
				return this._Total_price;
			}
			set
			{
				if ((this._Total_price != value))
				{
					this._Total_price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difference_col", DbType="Float")]
		public System.Nullable<double> difference_col
		{
			get
			{
				return this._difference_col;
			}
			set
			{
				if ((this._difference_col != value))
				{
					this._difference_col = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diff", DbType="Float")]
		public System.Nullable<double> diff
		{
			get
			{
				return this._diff;
			}
			set
			{
				if ((this._diff != value))
				{
					this._diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class Used_return_detailsResult
	{
		
		private int _Item_ID;
		
		private string _Name;
		
		private double _Sale_Price;
		
		private int _count;
		
		private double _Price;
		
		private string _Notes;
		
		public Used_return_detailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Float NOT NULL")]
		public double Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this._Sale_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(50)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
